// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Top level decision making - MSB(sel[2])
    // - If sel[2] = 0 then the passage is the abcd group
    // - If sel[2] = 1 then the passage is the efgh group
    DMux(in=in , sel=sel[2] , a=abcd , b=efgh );

    // Middle level decision making - sel[1]
    // - If sel[1] = 0 → route to ab / ef
    // - If sel[1] = 1 → route to cd / gh
    DMux(in=abcd , sel=sel[1] , a=ab , b=cd );
    DMux(in=efgh , sel=sel[1] , a=ef , b=gh );

    // Lowest level decision making - LSB(sel[0])
    DMux(in=ab , sel=sel[0] , a=a , b=b );
    DMux(in=cd , sel=sel[0] , a=c , b=d );
    DMux(in=ef , sel=sel[0] , a=e , b=f );
    DMux(in=gh , sel=sel[0] , a=g , b=h );
}